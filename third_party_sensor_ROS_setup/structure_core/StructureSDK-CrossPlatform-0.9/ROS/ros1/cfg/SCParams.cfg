#!/usr/bin/env python
PACKAGE = 'structure_core_ros_driver'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add('visible_initial_gain', double_t, 0, "visible_initial_gain", 2.0, 1.0, 8.0);
gen.add('visible_initial_exposure', double_t, 0, "visible_initial_exposure", 0.016, 0, 0.03);

gen.add("infrared_auto_exposure_enabled", bool_t, 3, "infrared_auto_exposure_enabled", False);
gen.add('infrared_initial_exposure', double_t, 0, "infrared_initial_exposure", 0.0146, 0, 0.03);
gen.add('infrared_initial_gain', double_t, 0, "infrared_initial_gain", 3.0, 0.0, 3.0);

gen.add("depth_apply_correction", bool_t, 3, "depth_apply_correction", True);

depth_ranges = gen.enum([
						gen.const('Invalid', int_t, -1, 'Invalid'),
						gen.const('VeryShort', int_t, 0, 'VeryShort'),
						gen.const('Short', int_t, 1, 'Short'),
						gen.const('Medium', int_t, 2, 'Medium'),
						gen.const('Long', int_t, 3, 'Long'),
						gen.const('VeryLong', int_t, 4, 'VeryLong'),
						gen.const('Hybrid', int_t, 5, 'Hybrid'),
						gen.const('BodyScanning', int_t, 6, 'BodyScanning'),
						gen.const('Default', int_t, 7, 'Default')],
						'depth_ranges')
						
gen.add('depth_range_mode', int_t, 0, 'depth_ranges', 1, -1, 7, edit_method=depth_ranges)

calibration_modes = gen.enum([
						gen.const('Off', int_t, 0, 'Off'),
						gen.const('OneShotPersistent', int_t, 1, 'OneShotPersistent'),
						gen.const('ContinuousNonPersistent', int_t, 2, 'ContinuousNonPersistent')],
						'calibration_modes')
						
gen.add('dynamic_calibration_mode', int_t, 0, 'calibration_modes', 0, 0, 2, edit_method=calibration_modes)

exit(gen.generate(PACKAGE, "structure_core_ros_driver", "SCParams"))